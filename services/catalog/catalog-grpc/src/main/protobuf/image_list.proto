syntax = "proto3";

package com.freepper.catalog.api;

import "google/api/field_behavior.proto";
import "google/api/resource.proto";
import "validate/validate.proto";
import "google/protobuf/field_mask.proto";
import "image.proto";

message ImageList {
  option (google.api.resource) = {
    type: "api.freepper.com/ImageList"
    pattern: "image_lists/{image_list}"
  };
  string name = 1;
  string uid = 2;
  string display_name = 3 [(validate.rules).string.min_len = 1];
  repeated Image images = 4;
}

message GetImageListRequest {
  string name = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference) = {
      type: "api.freepper.com/ImageList"
    }];
}

message DeleteImageListRequest {
  string name = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference) = {
      type: "api.freepper.com/ImageList"
    }];
}

message CreateImageListRequest {
  string parent = 1;
  ImageList image_list = 2;
  // The ID to use for the image list, which will become the final component of
  // the book's resource name.
  //
  // This value should be UUID_V4
  string image_list_id = 3;
}

message ListImageListsRequest {
  // The parent resource name, for example, "categories/category1".
  string parent = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference) = {
      child_type: "api.freepper.com/ImageList"
    }];

  // The maximum number of items to return.
  int32 page_size = 2 [
    (validate.rules).int32.gte = 0
  ];

  // The next_page_token value returned from a previous List request, if any.
  string page_token = 3;
}

message ListImageListsResponse {
  //There will be a maximum number of items returned based on the page_size field
  // in the request.
  repeated ImageList image_lists = 1;

  // Token to retrieve the next page of results, or empty if there are no
  // more results in the list.
  string next_page_token = 2;
}

message UpdateImageListRequest {
  ImageList image_list = 1;
  // The list of fields to update.
  google.protobuf.FieldMask update_mask = 2 [
    (validate.rules).message.required = true
  ];
}